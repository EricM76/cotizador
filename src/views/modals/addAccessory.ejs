<!-- Modal -->
<div
  class="modal fade"
  id="accessoryModal"
  tabindex="-1"
  aria-labelledby="exampleModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <!--  <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Agregar accesorios</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div> -->
      <div class="modal-body">
        <table class="table table-sm">
          <thead>
            <tr>
              <th scope="col">Cant.</th>
              <th scope="col">Accesorio</th>
              <th scope="col" class="col-1">Precio</th>
              <th scope="col" class="col-2">Subtotal</th>
            </tr>
          </thead>
          <tbody>
            <% accessories.forEach(accessory => { %>
            <tr>
              <th scope="row">
                <input
                  id="input<%= accessory.id %>"
                  class="form-control border-0 quantity"
                  type="number"
                  min="0"
                  max="5"
                  onchange="updateSubotal('<%=accessory.id%>')"
                />
              </th>
              <td class="fw-bold" id="accessory<%= accessory.id %>"><%= accessory.name %></td>
              <td>
                <div class="d-flex justify-content-between">
                  <span>$</span
                  ><span id="price<%= accessory.id %>"
                    ><%= accessory.price %></span
                  >
                </div>
              </td>
              <td>
                <div
                  class="d-flex justify-content-around"
                  id="box-subtotal<%= accessory.id %>"
                >
                  <span>$</span
                  ><span class="subtotal" id="subtotal<%= accessory.id %>"
                    >0</span
                  >
                </div>
              </td>
            </tr>
            <% }) %>
          </tbody>
          <tfoot>
            <tr>
              <td colspan="3" class="text-end">
                <b>TOTAL:</b>
              </td>
              <td colspan="1">
                <div class="d-flex justify-content-between">
                  <span>$</span><span id="total"></span>
                </div>
              </td>
            </tr>
          </tfoot>
        </table>
      </div>
      <div class="modal-footer">
        <button
          type="button"
          class="btn btn-secondary"
          data-bs-dismiss="modal"
        >
          Cerrar
        </button>
        <button
        id="btn-cancel"
        type="button"
        class="btn btn-dark"
      >
        Limpiar
      </button>
        <button id="btn-add" type="button" class="btn btn-primary">
          Agregar
        </button>
      </div>
    </div>
  </div>
</div>

<script>
let quantities = document.querySelectorAll('.quantity');
  let subtotales = document.querySelectorAll(".subtotal");
  let btnCancel = document.getElementById("btn-cancel");
  let btnAdd = document.getElementById("btn-add");
  let total = document.getElementById("total");
  let accessories = [];

  function updateSubotal(id) {
    let accessory = {};

    document.getElementById("subtotal" + id).innerHTML =
      +document.getElementById("input" + id).value *
      +document.getElementById("price" + id).innerText;
    let noFound = true;
   
    let accessoriesUpdated = accessories.map(element => {
        if(element.name === document.getElementById('accessory' + id).innerText){
            element = {
                id : id,
                name : document.getElementById('accessory' + id).innerText,
                price : +document.getElementById("price" + id).innerText,
                quantity : +document.getElementById('input' + id).value,
                subtotal :  +document.getElementById("subtotal" + id).innerText
            }
            noFound = false
            return element
        }
        return element
    });

    accessoriesUpdated = accessoriesUpdated.filter(element => element.quantity !== 0)

    accessories = accessories !== accessoriesUpdated && accessoriesUpdated;
  
      if(noFound){
        Object.defineProperty(accessory, "id", {
            value : +id
        })
        Object.defineProperty(accessory, "name", {
            value : document.getElementById('accessory' + id).innerText
        })
        Object.defineProperty(accessory, "quantity", {
            value : +document.getElementById('input' + id).value
        })
        Object.defineProperty(accessory, "price", {
            value :  +document.getElementById("price" + id).innerText
        })
        Object.defineProperty(accessory, "subtotal", {
            value :  +document.getElementById("subtotal" + id).innerText
        })
        accessories.push(accessory)
      }
       
    updateTotal();
  }

  function updateTotal() {
    let prices = [];
    for (let i = 0; i < subtotales.length; i++) {
      prices.push(+subtotales[i].innerHTML);
    }
    total.innerHTML = prices.reduce((acum, sum) => acum + sum);
  }

  btnCancel.addEventListener('click',() => {
    for (let i = 0; i < quantities.length; i++) {
      quantities[i].value = null;
    }
    for (let i = 0; i < subtotales.length; i++) {
      subtotales[i].innerHTML = null;
    }
    total.innerHTML = null;
    accessories = [];
    
  })

  btnAdd.addEventListener('click',async () => {

    let query = new URLSearchParams(location.search);
    
    const response = await fetch(`/orders/api/add-accessories`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    order : +query.get('order'),
                    accessories
                })
            });
    const result = await response.json();
    if (result.ok) {
        console.log('====================================');
        console.log(result.data);
        console.log('====================================');
    }
  })

</script>
